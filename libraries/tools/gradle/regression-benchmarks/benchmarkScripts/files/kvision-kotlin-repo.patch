diff --git a/build.gradle.kts b/build.gradle.kts
index a2eb037fd8..5e6896deed 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -1,6 +1,5 @@
 plugins {
-    val kotlinVersion: String by System.getProperties()
-    kotlin("plugin.serialization") version kotlinVersion
+    kotlin("plugin.serialization")
     kotlin("multiplatform")
     id("maven-publish")
     id("signing")
@@ -17,7 +17,7 @@ allprojects {
 }

 // Versions
-val kotlinVersion: String by System.getProperties()
+val kotlinVersion: String by extra
 val serializationVersion: String by project
 val coroutinesVersion: String by project

diff --git a/buildSrc/build.gradle.kts b/buildSrc/build.gradle.kts
index d0ef18b67b..ae67887584 100644
--- a/buildSrc/build.gradle.kts
+++ b/buildSrc/build.gradle.kts
@@ -3,12 +3,15 @@ plugins {
 }

 repositories {
+    mavenLocal()
     mavenCentral()
     gradlePluginPortal()
 }

+val kotlinVersion: String by extra
+
 dependencies {
-    implementation("org.jetbrains.kotlin:kotlin-gradle-plugin:1.9.0")
+    implementation("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
     implementation("io.github.gradle-nexus:publish-plugin:1.2.0")
     implementation("org.jetbrains.dokka:dokka-gradle-plugin:1.8.20")
     implementation(gradleApi())
diff --git a/buildSrc/gradle.properties b/buildSrc/gradle.properties
new file mode 100644
index 0000000000..b67c10f362
--- /dev/null
+++ b/buildSrc/gradle.properties
@@ -0,0 +1 @@
+kotlinVersion=<kotlin_version>
diff --git a/buildSrc/src/main/kotlin/Shared.kt b/buildSrc/src/main/kotlin/Shared.kt
index 59bf038735..0e0929a594 100644
--- a/buildSrc/src/main/kotlin/Shared.kt
+++ b/buildSrc/src/main/kotlin/Shared.kt
@@ -16,8 +16,8 @@ import org.jetbrains.kotlin.gradle.targets.js.dsl.KotlinJsTargetDsl

 fun Project.repositories() {
     repositories {
-        mavenCentral()
         mavenLocal()
+        mavenCentral()
     }
 }

diff --git a/gradle.properties b/gradle.properties
index 9315dcac95..d5fabb822c 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,7 +1,7 @@
 group=io.kvision
 versionNumber=7.0.0

-systemProp.kotlinVersion=1.9.0
+kotlinVersion=<kotlin_version>
 javaVersion=17
 coroutinesVersion=1.7.3
 serializationVersion=1.6.0-RC
diff --git a/settings.gradle.kts b/settings.gradle.kts
index 901058aae2..7c338f6ba2 100644
--- a/settings.gradle.kts
+++ b/settings.gradle.kts
@@ -1,8 +1,13 @@
 pluginManagement {
     repositories {
+        mavenLocal()
         gradlePluginPortal()
         mavenCentral()
-        mavenLocal()
+    }
+
+    val kotlinVersion: String by settings
+    plugins {
+        id("org.jetbrains.kotlin.plugin.serialization") version kotlinVersion
     }
 }
 rootProject.name = "kvision"
diff --git a/kvision-modules/kvision-server-javalin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-javalin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..010aa9110d 100644
--- a/kvision-modules/kvision-server-javalin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-javalin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -29,7 +29,7 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {
+expect class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {

     /**
      * Binds a given route with a function of the receiver.
@@ -37,7 +37,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified RET> bind(
+    inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -49,7 +49,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR, reified RET> bind(
+    inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -61,7 +61,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -73,7 +73,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -85,7 +85,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -97,7 +97,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -109,7 +109,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -119,7 +119,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a tabulator component source
      * @param function a function of the receiver
      */
-    protected inline fun <reified RET> bindTabulatorRemote(
+    inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
         route: String? = null
     )
@@ -128,7 +128,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a web socket connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
+    inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
         route: String? = null
     )
@@ -137,7 +137,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a server-sent events connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR : Any> bind(
+    inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
         route: String? = null
     )
diff --git a/kvision-modules/kvision-server-javalin/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-javalin/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 8f8e1a2d17..7239592f36 100644
--- a/kvision-modules/kvision-server-javalin/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-javalin/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -26,5 +26,5 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-actual open class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
+actual class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
     KVServiceMgr<T>
diff --git a/kvision-modules/kvision-server-jooby/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-jooby/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..010aa9110d 100644
--- a/kvision-modules/kvision-server-jooby/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-jooby/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -29,7 +29,7 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {
+expect class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {

     /**
      * Binds a given route with a function of the receiver.
@@ -37,7 +37,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified RET> bind(
+    inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -49,7 +49,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR, reified RET> bind(
+    inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -61,7 +61,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -73,7 +73,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -85,7 +85,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -97,7 +97,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -109,7 +109,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -119,7 +119,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a tabulator component source
      * @param function a function of the receiver
      */
-    protected inline fun <reified RET> bindTabulatorRemote(
+    inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
         route: String? = null
     )
@@ -128,7 +128,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a web socket connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
+    inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
         route: String? = null
     )
@@ -137,7 +137,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a server-sent events connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR : Any> bind(
+    inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
         route: String? = null
     )
diff --git a/kvision-modules/kvision-server-jooby/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-jooby/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 8f8e1a2d17..7239592f36 100644
--- a/kvision-modules/kvision-server-jooby/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-jooby/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -26,5 +26,5 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-actual open class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
+actual class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
     KVServiceMgr<T>
diff --git a/kvision-modules/kvision-server-ktor-koin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-ktor-koin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..010aa9110d 100644
--- a/kvision-modules/kvision-server-ktor-koin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-ktor-koin/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -29,7 +29,7 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {
+expect class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {

     /**
      * Binds a given route with a function of the receiver.
@@ -37,7 +37,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified RET> bind(
+    inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -49,7 +49,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR, reified RET> bind(
+    inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -61,7 +61,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -73,7 +73,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -85,7 +85,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -97,7 +97,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -109,7 +109,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -119,7 +119,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a tabulator component source
      * @param function a function of the receiver
      */
-    protected inline fun <reified RET> bindTabulatorRemote(
+    inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
         route: String? = null
     )
@@ -128,7 +128,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a web socket connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
+    inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
         route: String? = null
     )
@@ -137,7 +137,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a server-sent events connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR : Any> bind(
+    inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
         route: String? = null
     )
diff --git a/kvision-modules/kvision-server-ktor-koin/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-ktor-koin/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 8f8e1a2d17..7239592f36 100644
--- a/kvision-modules/kvision-server-ktor-koin/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-ktor-koin/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -26,5 +26,5 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-actual open class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
+actual class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
     KVServiceMgr<T>
diff --git a/kvision-modules/kvision-server-ktor/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-ktor/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..010aa9110d 100644
--- a/kvision-modules/kvision-server-ktor/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-ktor/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -29,7 +29,7 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {
+expect class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {

     /**
      * Binds a given route with a function of the receiver.
@@ -37,7 +37,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified RET> bind(
+    inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -49,7 +49,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR, reified RET> bind(
+    inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -61,7 +61,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -73,7 +73,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -85,7 +85,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -97,7 +97,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -109,7 +109,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -119,7 +119,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a tabulator component source
      * @param function a function of the receiver
      */
-    protected inline fun <reified RET> bindTabulatorRemote(
+    inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
         route: String? = null
     )
@@ -128,7 +128,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a web socket connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
+    inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
         route: String? = null
     )
@@ -137,7 +137,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a server-sent events connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR : Any> bind(
+    inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
         route: String? = null
     )
diff --git a/kvision-modules/kvision-server-ktor/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-ktor/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 8f8e1a2d17..7239592f36 100644
--- a/kvision-modules/kvision-server-ktor/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-ktor/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -26,5 +26,5 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-actual open class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
+actual class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
     KVServiceMgr<T>
diff --git a/kvision-modules/kvision-server-micronaut/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-micronaut/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..010aa9110d 100644
--- a/kvision-modules/kvision-server-micronaut/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-micronaut/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -29,7 +29,7 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {
+expect class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {

     /**
      * Binds a given route with a function of the receiver.
@@ -37,7 +37,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified RET> bind(
+    inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -49,7 +49,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR, reified RET> bind(
+    inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -61,7 +61,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -73,7 +73,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -85,7 +85,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -97,7 +97,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -109,7 +109,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -119,7 +119,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a tabulator component source
      * @param function a function of the receiver
      */
-    protected inline fun <reified RET> bindTabulatorRemote(
+    inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
         route: String? = null
     )
@@ -128,7 +128,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a web socket connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
+    inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
         route: String? = null
     )
@@ -137,7 +137,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a server-sent events connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR : Any> bind(
+    inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
         route: String? = null
     )
diff --git a/kvision-modules/kvision-server-micronaut/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-micronaut/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 8f8e1a2d17..7239592f36 100644
--- a/kvision-modules/kvision-server-micronaut/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-micronaut/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -26,5 +26,5 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-actual open class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
+actual class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
     KVServiceMgr<T>
diff --git a/kvision-modules/kvision-server-spring-boot/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-spring-boot/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..010aa9110d 100644
--- a/kvision-modules/kvision-server-spring-boot/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-spring-boot/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -29,7 +29,7 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {
+expect class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {

     /**
      * Binds a given route with a function of the receiver.
@@ -37,7 +37,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified RET> bind(
+    inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -49,7 +49,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR, reified RET> bind(
+    inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -61,7 +61,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -73,7 +73,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -85,7 +85,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -97,7 +97,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -109,7 +109,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -119,7 +119,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a tabulator component source
      * @param function a function of the receiver
      */
-    protected inline fun <reified RET> bindTabulatorRemote(
+    inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
         route: String? = null
     )
@@ -128,7 +128,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a web socket connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
+    inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
         route: String? = null
     )
@@ -137,7 +137,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a server-sent events connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR : Any> bind(
+    inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
         route: String? = null
     )
diff --git a/kvision-modules/kvision-server-spring-boot/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-spring-boot/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 8f8e1a2d17..7239592f36 100644
--- a/kvision-modules/kvision-server-spring-boot/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-spring-boot/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -26,5 +26,5 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-actual open class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
+actual class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
     KVServiceMgr<T>
diff --git a/kvision-modules/kvision-server-vertx/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-vertx/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 38e3fb757e..010aa9110d 100644
--- a/kvision-modules/kvision-server-vertx/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-vertx/src/commonMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -29,7 +29,7 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {
+expect class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVServiceMgr<T> {

     /**
      * Binds a given route with a function of the receiver.
@@ -37,7 +37,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified RET> bind(
+    inline fun <reified RET> bind(
         noinline function: suspend T.() -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -49,7 +49,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR, reified RET> bind(
+    inline fun <reified PAR, reified RET> bind(
         noinline function: suspend T.(PAR) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -61,7 +61,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -73,7 +73,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -85,7 +85,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -97,7 +97,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -109,7 +109,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * @param method a HTTP method
      * @param route a route
      */
-    protected inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
+    inline fun <reified PAR1, reified PAR2, reified PAR3, reified PAR4, reified PAR5, reified PAR6, reified RET> bind(
         noinline function: suspend T.(PAR1, PAR2, PAR3, PAR4, PAR5, PAR6) -> RET,
         method: HttpMethod = HttpMethod.POST,
         route: String? = null
@@ -119,7 +119,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a tabulator component source
      * @param function a function of the receiver
      */
-    protected inline fun <reified RET> bindTabulatorRemote(
+    inline fun <reified RET> bindTabulatorRemote(
         noinline function: suspend T.(Int?, Int?, List<RemoteFilter>?, List<RemoteSorter>?, String?) -> RemoteData<RET>,
         route: String? = null
     )
@@ -128,7 +128,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a web socket connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
+    inline fun <reified PAR1 : Any, reified PAR2 : Any> bind(
         noinline function: suspend T.(ReceiveChannel<PAR1>, SendChannel<PAR2>) -> Unit,
         route: String? = null
     )
@@ -137,7 +137,7 @@ expect open class KVServiceManager<out T : Any>(serviceClass: KClass<T>) : KVSer
      * Binds a given function of the receiver as a server-sent events connection
      * @param function a function of the receiver
      */
-    protected inline fun <reified PAR : Any> bind(
+    inline fun <reified PAR : Any> bind(
         noinline function: suspend T.(SendChannel<PAR>) -> Unit,
         route: String? = null
     )
diff --git a/kvision-modules/kvision-server-vertx/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt b/kvision-modules/kvision-server-vertx/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
index 8f8e1a2d17..7239592f36 100644
--- a/kvision-modules/kvision-server-vertx/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
+++ b/kvision-modules/kvision-server-vertx/src/jsMain/kotlin/io/kvision/remote/KVServiceManager.kt
@@ -26,5 +26,5 @@ import kotlin.reflect.KClass
 /**
  * Multiplatform service manager.
  */
-actual open class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
+actual class KVServiceManager<out T : Any> actual constructor(serviceClass: KClass<T>) : KVServiceManagerJs<T>(),
     KVServiceMgr<T>